CREATE DATABASE TOY_DATA;

USE TOY_DATA;

--1. What is the total sales revenue generated by each store?

SELECT st.Store_Name, SUM(p.Product_Price * sa.Units) AS total_revenue
FROM sales sa
JOIN stores st
ON sa.Store_ID = st.Store_ID
JOIN products p
ON sa.Product_ID = p.Product_ID
GROUP BY st.Store_Name;


--2. Which products are the top-selling in terms of units sold?

SELECT p.Product_Name, SUM(sa.Units) AS total_units_sold
FROM sales sa
JOIN products p
ON sa.Product_ID = p.Product_ID
GROUP BY p.Product_Name
ORDER BY total_units_sold DESC;


--3. What is the sales performance by product category?

SELECT p.Product_Category, SUM(p.Product_Price*sa.Units) AS sales
FROM sales sa
JOIN products p
ON sa.Product_ID = p.Product_ID
GROUP BY p.Product_Category
ORDER BY sales DESC;


--4. What are the current inventory levels for each product at each store?

SELECT st.Store_Name, p.Product_Name, i.Stock_On_Hand AS inventory_levels
FROM inventory i
JOIN stores st
ON i.Store_ID = st.Store_ID
JOIN products p
ON i.Product_ID = p.Product_ID
ORDER BY st.Store_Name, i.Stock_On_Hand;


--5.How do monthly sales trends vary across different stores?

SELECT 
    st.Store_Name, 
    DATENAME(month, sa.Date) AS month_name, 
    SUM(p.Product_Price * sa.Units) AS sales
FROM sales sa
JOIN stores st ON sa.Store_ID = st.Store_ID
JOIN products p ON sa.Product_ID = p.Product_ID
GROUP BY st.Store_Name, DATENAME(month, sa.Date), MONTH(sa.Date)
ORDER BY st.Store_Name, MONTH(sa.Date);


--6.Which stores have the highest and lowest sales performance?

WITH sales_cte AS
(
  SELECT st.Store_Name AS store, SUM(p.Product_Price * sa.Units) AS sales
  FROM sales sa
  JOIN products p ON sa.Product_ID = p.Product_ID
  JOIN stores st ON sa.Store_ID = st.Store_ID
  GROUP BY st.Store_Name
),
sales_summary AS
(
  SELECT MAX(sales) AS max_sales, MIN(sales) AS min_sales
  FROM sales_cte
)
SELECT store, sales,
CASE
    WHEN sales = s.max_sales THEN 'highest'
    WHEN sales = s.min_sales THEN 'lowest'
END AS performance_rank
FROM sales_cte
CROSS JOIN sales_summary s
WHERE sales = s.max_sales OR sales = s.min_sales
ORDER BY sales DESC;


--7. What is the profit margin for each product?

SELECT SUM(p.Product_Price * sa.Units) - SUM(p.Product_Cost * sa.Units) AS profit, 
	   SUM(p.Product_Price * sa.Units) AS total_revenue,
	   (SUM(p.Product_Price * sa.Units) - SUM(p.Product_Cost * sa.Units))*100/SUM(p.Product_Price * sa.Units) AS profit_margin
FROM products p
JOIN sales sa
ON p.Product_ID = sa.Product_ID;


--8.How are sales distributed across different cities?

SELECT st.Store_City, SUM(p.Product_Price*sa.Units) AS sales
FROM sales sa
JOIN stores st
ON sa.Store_ID = st.Store_ID
JOIN products p
ON sa.Product_ID = p.Product_ID
GROUP BY st.Store_City
ORDER BY sales DESC;


--9.Which products are out of stock in each store?

SELECT st.Store_Name, p.Product_Name
FROM inventory i
JOIN stores st
ON i.Store_ID = st.Store_ID
JOIN products p
ON i.Product_ID = p.Product_ID
WHERE i.Stock_On_Hand = 0
ORDER BY st.Store_Name,p.Product_Name;


--10.How do sales vary by specific dates?

SELECT sa.Date, SUM(p.Product_Price*sa.Units) AS sales
FROM sales sa
JOIN products p
ON sa.Product_ID = p.Product_ID
GROUP BY sa.Date
ORDER BY sa.Date;


--11.What is the average cost of products in each category?

SELECT Product_Category, AVG(Product_Cost) AS avg_cost
FROM products
GROUP BY Product_Category;


--12.What is the sales growth over time for the entire company?

SELECT 
    MONTH(Date) AS month,
    SUM(p.Product_Price * sa.Units) AS total_sales,
    (SUM(p.Product_Price * sa.Units) - 
    LAG(SUM(p.Product_Price * sa.Units)) OVER (ORDER BY MONTH(Date))) 
    / LAG(SUM(p.Product_Price * sa.Units)) OVER (ORDER BY MONTH(Date)) * 100 AS growth_percentage
FROM sales sa
JOIN products p 
ON sa.Product_ID = p.Product_ID
GROUP BY MONTH(sa.Date)
ORDER BY month;


--13.How does the store open date affect sales performance?

SELECT st.Store_Name, 
       DATEDIFF(YEAR, st.Store_Open_Date, GETDATE()) AS store_age_years, 
       SUM(p.Product_Price * sa.Units) AS total_sales
FROM sales sa
JOIN products p 
ON sa.Product_ID = p.Product_ID
JOIN stores st 
ON sa.Store_ID = st.Store_ID
GROUP BY st.Store_Name, st.Store_Open_Date
ORDER BY store_age_years;


--14.What percentage of total sales does each store contribute?

SELECT st.Store_Name, 
       SUM(p.Product_Price * sa.Units) AS store_sales,
       (SUM(p.Product_Price * sa.Units) / (SELECT SUM(p.Product_Price * sa.Units) 
                                           FROM sales sa 
                                           JOIN products p 
                                           ON sa.Product_ID = p.Product_ID)) * 100 AS sales_percentage
FROM sales sa
JOIN products p ON sa.Product_ID = p.Product_ID
JOIN stores st ON sa.Store_ID = st.Store_ID
GROUP BY st.Store_Name
ORDER BY sales_percentage DESC;


--15.How do sales compare to current stock levels for each product?

SELECT p.Product_Name, 
       SUM(sa.Units) AS total_units_sold, 
       SUM(i.Stock_On_Hand) AS current_stock
FROM sales sa
JOIN products p 
ON sa.Product_ID = p.Product_ID
JOIN inventory i 
ON p.Product_ID = i.Product_ID
GROUP BY p.Product_Name
ORDER BY p.Product_Name;

